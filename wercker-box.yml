name: sup
version: 0.0.1
inherits: wercker/ubuntu12.04-webessentials@1.0.0
type : main
platform : ubuntu@12.04
description : golang and nodejs
keywords:
  - golang
  - go
  - nodejs
packages :
  - golang@1.3
  - git
  - mercurial
  - bzr
script : |
  version="1.3"

  sudo apt-get update
  sudo apt-get install bzr
  sudo apt-get install mercurial
  wget http://golang.org/dl/go${version}.linux-amd64.tar.gz
  sudo tar -C /usr/local -xzf go${version}.linux-amd64.tar.gz
  echo "export PATH=$PATH:/usr/local/go/bin" | sudo tee -a /etc/profile
  rm go${version}.linux-amd64.tar.gz

  # Set GOPATH
  export GOPATH="$HOME/go"
  echo 'export GOPATH="$HOME/go"' | sudo tee -a /etc/profile

  # Adds go bin directory to path so tools
  # and buils are available on the commandline
  export PATH="$PATH:$GOPATH/bin"
  echo 'export PATH="$PATH:$GOPATH/bin"' | sudo tee -a /etc/profile

  # Make actual go workspace dir structure
  mkdir -p "$HOME/go/{src,pkg,bin}"

box-detect:
  priority : 900
  version :
  detect:
    - files:
      - .godir
    - files:
      - main.go
    - files:
      - app.go
    - files:
      - server.go
    - files:
      - package.json

default-build:
  go:
    priority : 50
    detect:
      - default: true
    text-to-append: |
      # Build definition
      build:
        # The steps that will be executed on build
        steps:
          # Sets the go workspace and places you package
          # at the right place in the workspace tree
          - setup-go-workspace

          # Gets the dependencies
          - script:
              name: go get
              code: |
                cd $WERCKER_SOURCE_DIR
                go version
                go get -t ./...

          # Build the project
          - script:
              name: go build
              code: |
                go build ./...

          # Test the project
          - script:
              name: go test
              code: |
                go test ./...
  nodejs:
    priority : 50
    detect:
      - default: true
    text-to-append: |
      # Build definition
      build:
        # The steps that will be executed on build
        steps:
          # A step that executes `npm install` command
          - npm-install
          # A step that executes `npm test` command
          - npm-test

          # A custom script step, name value is used in the UI
          # and the code value contains the command that get executed
          - script:
              name: echo nodejs information
              code: |
                echo "node version $(node -v) running"
                echo "npm version $(npm -v) running"
